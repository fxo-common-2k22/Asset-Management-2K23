@model FAPP.ViewModel.MessagingVM
@using FAPP.DAL;

@using FAPP.Model;

@{
    ViewBag.Title = "Certificates Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-sm-8">
        <div class="box box-color grey box-bordered">
            <div class="box-title" style="margin-top: 0 !important;">
                <h3>
                    <i class="fa fa-check-square-o"></i>
                    All Issued Certificates
                </h3>
                <div class="actions">
                    <a href="#" class="btn btn-mini content-slideUp">
                        <i class="fa fa-angle-down"></i>
                    </a>
                </div>
            </div>
            <div class="box-content">
                <div id="paiChart"></div> 
            </div>
        </div>
    </div>
    <div class="col-sm-4">
        <div class="box box-color box-bordered orange">
            <div class="box-title" style="margin-top: 0 !important;">
                <h3>
                    <i class="fa fa-bars"></i>
                    <span id="LabelTitle">Settings</span>
                </h3>
            </div>
            <div class="box-content">
                <table class="table table-nohead">
                    <tbody>
                        <tr style="display: table-row;">
                            <td>
                                <span class="label label-default"><i class="fa fa-bars"></i></span>
                                <a href="@Url.Action("Manage",new {id=Model.ModuleId })">Manage Certificates </a>
                            </td>
                        </tr>
                        @*<tr style="display: table-row;">
                            <td>
                                <span class="label label-default"><i class="fa fa-bars"></i></span>
                                <a href="@Url.Action("Issued")">Issued Certificates</a>
                            </td>
                        </tr>*@
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<div class="row">
    @{
        var templateTypes = (List<TemplateType>)TempData["TemplateTypes"];
        string[] array = new string[] { "blue", "darkblue", "grey", "orange", "brown", "green", "red" };
    }

    @{int i = 0;
        foreach (var type in templateTypes)
        {
            <div class="col-sm-8">
                <div class="box box-color @array[i] box-bordered">
                    <div class="box-title">
                        <h3>
                            <i class="fa fa-check-square-o"></i>
                            @Html.DisplayFor(m => type.TemplateTypeName)
                        </h3>
                        <div class="actions">
                            <a href="#" class="btn btn-mini content-slideUp">
                                <i class="fa fa-angle-down"></i>
                            </a>
                        </div>
                    </div>
                    <div class="box-content">
                        @Html.Action("GetDashboardCertificates", "Primary", new { area = "", mid = type.ModuleId, ttid = type.TemplateTypeId })
                    </div>
                </div>
            </div>
            i++;
        }
    }
</div>


@section scripts{
    <script src="~/Scripts/googleChart.js"></script>
    <script type="text/javascript">

    // Load the Visualization API and the corechart package.
    google.charts.load('current', {'packages':['corechart']});

    // Set a callback to run when the Google Visualization API is loaded.
    google.charts.setOnLoadCallback(drawChart);

    // Callback that creates and populates a data table,
    // instantiates the pie chart, passes in the data and
    // draws it.
    function drawChart() {

        // Create the data table.
        var data = new google.visualization.DataTable();
        data.addColumn('string', 'Topping');
        data.addColumn('number', 'Slices');
        data.addRows([
            @foreach (var item in Model.SmsChart)
            {
                <text>['@item.Key', @item.Value],</text>
            }
        ]);
        // Set chart options
        var options =
        {
            'title': 'Issued Certificates',
            'width':450,
            'height': 300,
            is3D: true,
            sliceVisibilityThreshold: 0,
            chartArea: { left: 20, top: 20, width: '100%', height: '100%' }
        };

        // Instantiate and draw our chart, passing in some options.
        var chart = new google.visualization.PieChart(document.getElementById('paiChart'));
        chart.draw(data, options);
        }


        
             $('#extendedPageHeader').html(`<p style="margin:13px 0px">
                @{
                      <label class="label label-darkblue" title="Module Name">@(Model.ModuleName)</label>
                } </p>`);
    </script>

}