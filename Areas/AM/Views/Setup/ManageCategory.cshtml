@model FAPP.Areas.AM.ViewModels.ManageAMCategoryViewModel

@{
    ViewBag.Title = "Manage Categories";
}

@section topRightMenu{

    @if (ViewBag.CanCreate)
    {
<ul class="minitiles link">
    <li class="blue">
        <a href="javascript:" id="" data-toggle="modal" data-target="#AddCategoryModal">
            <i class="fa fa-plus"></i>
        </a>
    </li>
    <li class='orange' title="Fix Category code and its accounts">
        <a href="@Url.Action("FixCategories")">
            <i class="fa fa-cogs"></i>
        </a>
    </li>
</ul>
    }
    <ul class="stats">
        <li class='satgreen hidden' title="Total Categories">
            <i class="fa fa-slack"></i>
            <div class="details">
                <span class="big largeFont" id="topTotal">
                    @(Model.Categories == null ? "" : Model.Categories.Count().ToString())
                </span>
            </div>
        </li>
        <li class='orange hidden' title="Fix Category code and its accounts">
            <a href="@Url.Action("FixCategories")">
                <i class="fa fa-cogs"></i>
            </a>
        </li>
    </ul>

}

@*<style>
    #main .page-header {
        padding-bottom: 9px;
    }
</style>*@


<div class="vbox row">
    @using (Ajax.BeginForm("ManageCategory", "Setup",
                        new AjaxOptions
                        {
                            OnSuccess = "OnResponceBackFromServer"
                        }))
    {
        Html.EnableClientValidation(true);
        <div class="form-group col-md-3" style="padding:0px;padding-right: 5px; margin:0px;">
            @Html.EditorFor(x => x.Search, new { htmlAttributes = new { @class = "form-control", @placeholder = "Search Here..." } })
            @Html.ValidationMessageFor(model => model.Search, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-3" style="padding-left: 0px; margin:0px;">
            <input type="submit" name="" id="GenerateReport" value="Search" class="btn btn-default">
        </div>
    }
</div>

<div id="UpdateTarget">
    @Html.Partial("_PartialManageAMCategory", Model)
</div>

<div class="modal fade" id="AddCategoryModal" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        @using (Ajax.BeginForm("AddCategory", "Setup",
                new AjaxOptions
                {
                    OnSuccess = "OnResponceBackFromServer"
                }, new { id = "AddCategoryForm" }))
        {
            { Html.EnableClientValidation(); }
            <div class="modal-content">
                <div class="modal-header" style="background-color: #368ee0; color:white;">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Add Item Category</h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="box-content nopadding">
                                <div class="form-horizontal form-bordered">
                                    <div class="form-group">
                                        <label for="textfield" class="control-label col-sm-3">New Category</label>
                                        <div class="col-sm-9">
                                            @Html.EditorFor(model => model.Category.CategoryName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Item Name" } })
                                            @Html.ValidationMessageFor(model => model.Category.CategoryName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="textfield" class="control-label col-sm-3">Short Name</label>
                                        <div class="col-sm-9">
                                            @Html.EditorFor(model => model.Category.ShortName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Short Name" } })
                                            @Html.ValidationMessageFor(model => model.Category.ShortName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <input type="submit" value="Save Category" class="btn btn-primary load" />
                </div>
            </div>
        }
    </div>
</div>

<div class="modal fade" id="EditModal" role="dialog">
    <div class="modal-dialog">
        <div id="EditModalTarget"> </div>
    </div>
</div>
<script>
        jQuery(document).ready(function () {

            $('#extendedPageHeader').html(`<p style="margin:11px 0px 0px 0px"><label class="label label-darkblue">Total Count : @Model.Categories.Count() @(Model.Categories == null ? "" : Model.Categories.Count().ToString())</label></p>`);
        });
</script>